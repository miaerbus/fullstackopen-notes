{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","setTimeout","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCE3BK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKJ,UAAU,SAASI,I,gBCN3BC,EAAU,qDAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAa9B,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCVvCK,EAAS,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGA2FSC,EApFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAYhBC,qBANa,WACXC,QAAQC,IAAI,UACZC,IAAqBzB,MAAK,SAAC0B,GACzBX,EAASW,QAGG,IAChBH,QAAQC,IAAI,SAAUV,EAAMa,OAAQ,SAEpC,IAkBMC,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAACzC,GAAD,OAAUA,EAAKG,aAwBlE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASwB,IACvB,6BACE,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYE,KAAI,SAAC1C,EAAM2C,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL3C,KAAMA,EACNC,iBAAkB,kBApCH,SAACgB,GACxBkB,QAAQC,IAAR,yBAA8BnB,EAA9B,0BAEA,IAAMjB,EAAO0B,EAAMmB,MAAK,SAACC,GAAD,OAAOA,EAAE7B,KAAOA,KAClC8B,EAAW,eAAQ/C,EAAR,CAAcG,WAAYH,EAAKG,YAEhDkC,EACUpB,EAAI8B,GACXnC,MAAK,SAACoC,GACLrB,EAASD,EAAMgB,KAAI,SAAC1C,GAAD,OAAWA,EAAKiB,KAAOA,EAAKjB,EAAOgD,SAEvDC,OAAM,WACLhB,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGf6C,YAAW,WACTjB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAACK,GAAD,OAAOA,EAAE7B,KAAOA,SAkBVhB,CAAiBD,EAAKiB,WAIpD,0BAAMkC,SA5DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAASuB,EACT2B,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BtB,EAAmBiB,GAAY1C,MAAK,SAACoC,GACnCrB,EAASD,EAAMkC,OAAOZ,IACtBnB,EAAW,SAmDT,2BAAOgC,MAAOjC,EAASkC,SA/CJ,SAACV,GACxBvB,EAAWuB,EAAMW,OAAOF,UA+CpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MChGNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c5d7df92.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = 'http://obscure-coast-13626.herokuapp.com/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const hook = () => {\n    console.log('effect')\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes)\n    })\n  }\n  useEffect(hook, [])\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important)\n\n  const toggleImportance = (id) => {\n    console.log(`importance of '${id}' needs to be toggled`)\n\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch(() => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}